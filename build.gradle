import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "2.1.0"
}

version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url 'https://maven.impactdev.net/repository/development/' }
    maven { url 'https://maven.nucleoid.xyz' }
}

dependencies {
    // To change the versions see the gradle.properties file

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    modImplementation("net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21")
    modImplementation("com.cobblemon:fabric:1.6.1+1.21.1-SNAPSHOT")

    modImplementation ("eu.pb4:polymer-core:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-virtual-entity:${project.polymer_version}")

    include modImplementation("eu.pb4:placeholder-api:${project.papi_version}")
    include modImplementation("eu.pb4:sgui:${project.sgui_version}")

    include modImplementation('me.lucko:fabric-permissions-api:0.3.1')
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "emotive" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = 21
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {

    }
}